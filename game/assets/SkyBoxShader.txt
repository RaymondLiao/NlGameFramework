//===============================
// vs shader
//===============================

//-------------------------------
// global variables
//-------------------------------
float4x4 g_wvp :      register(c0);
float4x4 g_worldMat : register(c4);

//-------------------------------
// vs input structer
//-------------------------------
struct VS_INPUT
{
	float3 pos : 		 POSITION;
	float3 normal :  NORMAL;
	float2 texcoord: TEXCOORD;
};

//-------------------------------
// vs output structer
//-------------------------------
struct VS_OUTPUT
{
	float4 pos : 			POSITION0;
	float3 normal : 	NORMAL;
	float2 texcoord:	TEXCOORD0;
	float3 worldpos : TEXCOORD1;
};

//-------------------------------
// vs main
//-------------------------------
VS_OUTPUT vs_main( VS_INPUT input )
{
	VS_OUTPUT output = (VS_OUTPUT)0;
	output.pos = mul( g_wvp, float4(input.pos.xyz, 1.0) );
		
	float3 normal = mul( g_worldMat, float4(input.normal, 0) ).xyz;
	normal = normalize(normal);
	output.normal = normal;
	
	float3 worldpos = mul( g_worldMat, float4(input.pos, 1) ).xyz;
	output.worldpos = worldpos;
	
	output.texcoord = input.texcoord;
	return output;
};


//===============================
// ps shader
//===============================

//-------------------------------
// global variables
//-------------------------------
float3 g_camPos :  		register(c0);
samplerCUBE g_envTex: register(s0);
	
//-------------------------------
// ps input structer
//-------------------------------
struct PS_INPUT
{
	float3 worldpos : TEXCOORD1;
};

//-------------------------------
// ps output structer
//-------------------------------
struct PS_OUTPUT
{
	float4 color : COLOR;
};

//-------------------------------
// ps main
//-------------------------------
PS_OUTPUT ps_main( PS_INPUT input )
{
	PS_OUTPUT output = (PS_OUTPUT)0;
	
	// light inten
	float3 colorrgb = 1.0;
	float3 texCubeCoord = normalize( input.worldpos - g_camPos );
	float3 diffuse = texCUBE( g_envTex, texCubeCoord );
	
	colorrgb *= diffuse;
	output.color = float4(colorrgb, 1.0);
	
	return output;
};
